name: Generate Release PDF

on: 
  push:
    branches:
      - main
      - workflow
    paths-ignore:
      - '.gitignore'
      - '**.md'

env:
  TYPST_FILE_NAME: book

jobs:
  build_typst:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Set up Git repository for secondary repo
        uses: actions/checkout@v4
     
      - name: Install Fonts
        run: |
          wget -O Noto_Sans_SC.zip https://fonts.google.com/download?family=Noto%20Sans%20SC
          echo "Font downloaded."
          ls -l
          file Noto_Sans_SC.zip
          unzip -d Noto_Sans_SC/ Noto_Sans_SC.zip
          mv Noto_Sans_SC/static /usr/share/fonts/
          fc-cache -fv

      - name: Check Fonts Existence
        id: check-fonts
        run: |
          if [ -f "/usr/share/fonts/NotoSansSC-Regular.ttf" ]; then
            echo "Font already cached."
            echo "::set-output name=font_exists::true"
          else
            echo "No Font!"
            echo "::set-output name=font_exists::false"
          fi

      - name: Prepare Typst environment
        uses: typst-community/setup-typst@v3

      - name: Compile Typst document
        run: |
          typst fonts --variants
          typst compile ${{ env.TYPST_FILE_NAME }}.typ ${{ env.TYPST_FILE_NAME }}.pdf 

      - name: Delete old Release
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo
            try {
              const { data: { id } } = await github.rest.repos.getLatestRelease({ owner, repo })
              await github.rest.repos.deleteRelease({ owner, repo, release_id: id })
            } catch {}

      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::latest_$(date +"%Y-%m-%d_%H-%M")"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: latest version
          body: Latest version of `${{ env.TYPST_FILE_NAME }}.pdf`
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: ${{ env.TYPST_FILE_NAME }}.pdf
